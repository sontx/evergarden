version: '3.8'

services:
  mysql:
    image: mysql:8.0.26
    container_name: mysqldb
    command: --default-authentication-plugin=mysql_native_password --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    restart: always
    deploy:
      resources:
        limits:
          memory: 500M
        reservations:
          memory: 100M
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=evergarden
    ports:
      - "3306:3306"
    volumes:
      - ./data/mysql/data:/var/lib/mysql
      - ./data/mysql/backup:/data_backup/data
  elastic:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.14.0
    container_name: elastic
    restart: always
    environment:
      - discovery.type=single-node
      - bootstrap.memory_lock=true
    ulimits:
      memlock:
        soft: -1
        hard: -1
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 2G
        reservations:
          cpus: '0.25'
          memory: 500M
    volumes:
      - ./data/elastic:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
  kibana:
    image: docker.elastic.co/kibana/kibana:7.14.0
    container_name: kibana
    ports:
      - "5601:5601"
    environment:
      ELASTICSEARCH_URL: http://elastic:9200
      ELASTICSEARCH_HOSTS: '["http://elastic:9200"]'
    deploy:
      resources:
        limits:
          memory: 500M
        reservations:
          memory: 100M
  redis:
    image: redis:6.2.4-alpine
    command: redis-server
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - ./data/redis/data:/var/lib/redis
      - ./data/redis/config:/usr/local/etc/redis/redis.conf
    environment:
      - REDIS_REPLICATION_MODE=master
    deploy:
      resources:
        limits:
          memory: 50M
        reservations:
          memory: 20M
  minio:
    image: minio/minio
    ports:
      - "9000:9000"
      - "9001:9001"
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    volumes:
      - ./data/minio:/data
    deploy:
      resources:
        limits:
          memory: 200M
        reservations:
          memory: 50M
  api:
    build:
      context: .
      dockerfile: packages/api/Dockerfile
      target: development
    command: ./wait-for-it.sh mysql:3306 -- ./wait-for-it.sh elastic:9200 -- ./wait-for-it.sh redis:6379 -- ./wait-for-it.sh minio:9000 -- npm run docker:dev
    environment:
      NODE_ENV: development
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    depends_on:
      - mysql
      - elastic
      - redis
      - minio
    stdin_open: true
    tty: true
    ports:
      - "3000:3000"
    links:
      - mysql
      - redis
      - elastic
      - minio
    volumes:
      - ./packages/api:/app/packages/api
      - ./packages/shared:/app/packages/shared
      - /app/packages/api/node_modules
      - /app/packages/shared/node_modules
